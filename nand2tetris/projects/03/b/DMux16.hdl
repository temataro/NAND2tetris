// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// Helper for DMux4Way16 -> DMux8Way16 -> RAM8

/**
 * Demultiplexor:
 * {a, b} = {in, 0} if sel == 0
 *          {0, in} if sel == 1
 * a = and(in, not(sel))
 * b = and(in, sel)
 */

CHIP DMux16 {
    IN in[16], sel;
    OUT a[16], b[16];

    PARTS:
    Not (in=sel, out=selbar); 
    // ..
    And (a=in[0], b=selbar, out=a[0]);
    And (a=in[0], b=sel,    out=b[0]);
    // ..
    And (a=in[1], b=selbar, out=a[1]);
    And (a=in[1], b=sel,    out=b[1]);
    // ..
    And (a=in[2], b=selbar, out=a[2]);
    And (a=in[2], b=sel,    out=b[2]);
    // ..
    And (a=in[3], b=selbar, out=a[3]);
    And (a=in[3], b=sel,    out=b[3]);
    // ..
    And (a=in[4], b=selbar, out=a[4]);
    And (a=in[4], b=sel,    out=b[4]);
    // ..
    And (a=in[5], b=selbar, out=a[5]);
    And (a=in[5], b=sel,    out=b[5]);
    // ..
    And (a=in[6], b=selbar, out=a[6]);
    And (a=in[6], b=sel,    out=b[6]);
    // ..
    And (a=in[7], b=selbar, out=a[7]);
    And (a=in[7], b=sel,    out=b[7]);
    // ..
    And (a=in[8], b=selbar, out=a[8]);
    And (a=in[8], b=sel,    out=b[8]);
    // ..
    And (a=in[9], b=selbar, out=a[9]);
    And (a=in[9], b=sel,    out=b[9]);
    // ..
    And (a=in[10], b=selbar, out=a[10]);
    And (a=in[10], b=sel,    out=b[10]);
    // ..
    And (a=in[11], b=selbar, out=a[11]);
    And (a=in[11], b=sel,    out=b[11]);
    // ..
    And (a=in[12], b=selbar, out=a[12]);
    And (a=in[12], b=sel,    out=b[12]);
    // ..
    And (a=in[13], b=selbar, out=a[13]);
    And (a=in[13], b=sel,    out=b[13]);
    // ..
    And (a=in[14], b=selbar, out=a[14]);
    And (a=in[14], b=sel,    out=b[14]);
    // ..
    And (a=in[15], b=selbar, out=a[15]);
    And (a=in[15], b=sel,    out=b[15]);
    // ..
}

